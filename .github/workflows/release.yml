name: Release new apk

on:
  push:
    branches: [ "master" ]

jobs:
  Release:

      runs-on: ubuntu-latest
      
      steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Up JDK 17  
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test
      
      - name: Build with Gradle
        run: ./gradlew build

      - name: Find APK file
        id: find_apk
        run: echo "::set-output name=apk_path::$(find app/build/outputs/apk/release -name "*.apk" | head -n 1)"

      - name: Get the latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $latest_tag"
          echo "::set-output name=latest_tag::$latest_tag"
    
      - name: Increment tag
        id: increment_tag
        run: |
          latest_tag=${{ steps.get_latest_tag.outputs.latest_tag }}
          IFS='.' read -r -a version_parts <<< "${latest_tag#v}"
          major=${version_parts[0]}
          minor=${version_parts[1]}
          patch=${version_parts[2]}
          new_patch=$((patch + 1))
          new_tag="v$major.$minor.$new_patch"
          
          while git rev-parse "refs/tags/$new_tag" >/dev/null 2>&1; do
            new_patch=$((new_patch + 1))
            new_tag="v$major.$minor.$new_patch"
          done
          
          echo "New tag: $new_tag"
          echo "::set-output name=new_tag::$new_tag"
      
      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ steps.find_apk.outputs.apk_path }}"
          tag: ${{ steps.increment_tag.outputs.new_tag }}
          token: ${{ secrets.SECRET_TOKEN }}
